{"id":"index.js","dependencies":[{"name":"/Users/kschoi/dev/frontend-challenges/2-dom/observer/intersectionObserver/package.json","includedInParent":true,"mtime":1652447849633},{"name":"./style.css","loc":{"line":1,"column":7},"parent":"/Users/kschoi/dev/frontend-challenges/2-dom/observer/intersectionObserver/index.js","resolved":"/Users/kschoi/dev/frontend-challenges/2-dom/observer/intersectionObserver/style.css"},{"name":"regenerator-runtime","loc":{"line":2,"column":7},"parent":"/Users/kschoi/dev/frontend-challenges/2-dom/observer/intersectionObserver/index.js","resolved":"/Users/kschoi/dev/frontend-challenges/2-dom/observer/intersectionObserver/node_modules/regenerator-runtime/runtime.js"},{"name":"./listRenderer","loc":{"line":4,"column":23},"parent":"/Users/kschoi/dev/frontend-challenges/2-dom/observer/intersectionObserver/index.js","resolved":"/Users/kschoi/dev/frontend-challenges/2-dom/observer/intersectionObserver/listRenderer.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"./style.css\");\n\nrequire(\"regenerator-runtime\");\n\nvar _listRenderer = _interopRequireDefault(require(\"./listRenderer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = document.querySelector(\"#app\");\nvar fetchMoreTrigger = document.querySelector(\"#fetchMore\");\nvar page = 0;\n\nvar fetchMore = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var target;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            target = page ? fetchMoreTrigger : app;\n            target.classList.add(\"loading\");\n            _context.next = 4;\n            return (0, _listRenderer.default)(page++);\n\n          case 4:\n            target.classList.remove(\"loading\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchMore() {\n    return _ref.apply(this, arguments);\n  };\n}(); // Observe loadBtn\n\n\nvar options = {\n  // Use the whole screen as scroll area\n  root: null,\n  // Do not grow or shrink the root area\n  rootMargin: \"10px\",\n  // Threshold of 1.0 will fire callback when 100% of element is visible\n  threshold: 0.0\n};\nvar observer = new IntersectionObserver(function (entries) {\n  // Entries is a list of elements out of our targets that reported a change.\n  var _entries = _slicedToArray(entries, 1),\n      isIntersecting = _entries[0].isIntersecting;\n\n  if (isIntersecting) {\n    fetchMore();\n  }\n}, options);\nobserver.observe(fetchMoreTrigger);"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"index.js","original":{"line":2,"column":0}},{"generated":{"line":7,"column":0},"source":"index.js","original":{"line":4,"column":0}},{"generated":{"line":27,"column":0},"source":"index.js","original":{"line":6,"column":0}},{"name":"app","generated":{"line":27,"column":4},"source":"index.js","original":{"line":6,"column":6}},{"generated":{"line":27,"column":7},"source":"index.js","original":{"line":6,"column":9}},{"name":"document","generated":{"line":27,"column":10},"source":"index.js","original":{"line":6,"column":12}},{"generated":{"line":27,"column":18},"source":"index.js","original":{"line":6,"column":20}},{"name":"querySelector","generated":{"line":27,"column":19},"source":"index.js","original":{"line":6,"column":21}},{"generated":{"line":27,"column":32},"source":"index.js","original":{"line":6,"column":12}},{"generated":{"line":27,"column":33},"source":"index.js","original":{"line":6,"column":35}},{"generated":{"line":27,"column":39},"source":"index.js","original":{"line":6,"column":12}},{"generated":{"line":27,"column":40},"source":"index.js","original":{"line":6,"column":0}},{"generated":{"line":28,"column":0},"source":"index.js","original":{"line":7,"column":0}},{"name":"fetchMoreTrigger","generated":{"line":28,"column":4},"source":"index.js","original":{"line":7,"column":6}},{"generated":{"line":28,"column":20},"source":"index.js","original":{"line":7,"column":22}},{"name":"document","generated":{"line":28,"column":23},"source":"index.js","original":{"line":7,"column":25}},{"generated":{"line":28,"column":31},"source":"index.js","original":{"line":7,"column":33}},{"name":"querySelector","generated":{"line":28,"column":32},"source":"index.js","original":{"line":7,"column":34}},{"generated":{"line":28,"column":45},"source":"index.js","original":{"line":7,"column":25}},{"generated":{"line":28,"column":46},"source":"index.js","original":{"line":7,"column":48}},{"generated":{"line":28,"column":58},"source":"index.js","original":{"line":7,"column":25}},{"generated":{"line":28,"column":59},"source":"index.js","original":{"line":7,"column":0}},{"generated":{"line":29,"column":0},"source":"index.js","original":{"line":8,"column":0}},{"name":"page","generated":{"line":29,"column":4},"source":"index.js","original":{"line":8,"column":4}},{"generated":{"line":29,"column":8},"source":"index.js","original":{"line":8,"column":8}},{"generated":{"line":29,"column":11},"source":"index.js","original":{"line":8,"column":11}},{"generated":{"line":29,"column":12},"source":"index.js","original":{"line":8,"column":0}},{"generated":{"line":31,"column":0},"source":"index.js","original":{"line":10,"column":0}},{"name":"fetchMore","generated":{"line":31,"column":4},"source":"index.js","original":{"line":10,"column":6}},{"generated":{"line":31,"column":13},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":32,"column":0},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":32,"column":69},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":33,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":34,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":35,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":36,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":37,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"name":"target","generated":{"line":38,"column":0},"source":"index.js","original":{"line":11,"column":8}},{"name":"target","generated":{"line":38,"column":12},"source":"index.js","original":{"line":11,"column":8}},{"generated":{"line":38,"column":18},"source":"index.js","original":{"line":10,"column":18}},{"name":"page","generated":{"line":38,"column":21},"source":"index.js","original":{"line":11,"column":17}},{"generated":{"line":38,"column":25},"source":"index.js","original":{"line":11,"column":21}},{"name":"fetchMoreTrigger","generated":{"line":38,"column":28},"source":"index.js","original":{"line":11,"column":24}},{"generated":{"line":38,"column":44},"source":"index.js","original":{"line":11,"column":21}},{"name":"app","generated":{"line":38,"column":47},"source":"index.js","original":{"line":11,"column":43}},{"generated":{"line":38,"column":50},"source":"index.js","original":{"line":10,"column":18}},{"name":"target","generated":{"line":39,"column":0},"source":"index.js","original":{"line":12,"column":2}},{"name":"target","generated":{"line":39,"column":12},"source":"index.js","original":{"line":12,"column":2}},{"generated":{"line":39,"column":18},"source":"index.js","original":{"line":12,"column":8}},{"name":"classList","generated":{"line":39,"column":19},"source":"index.js","original":{"line":12,"column":9}},{"generated":{"line":39,"column":28},"source":"index.js","original":{"line":12,"column":2}},{"name":"add","generated":{"line":39,"column":29},"source":"index.js","original":{"line":12,"column":19}},{"generated":{"line":39,"column":32},"source":"index.js","original":{"line":12,"column":2}},{"generated":{"line":39,"column":33},"source":"index.js","original":{"line":12,"column":23}},{"generated":{"line":39,"column":42},"source":"index.js","original":{"line":12,"column":2}},{"generated":{"line":40,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":41,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":41,"column":19},"source":"index.js","original":{"line":13,"column":8}},{"name":"page","generated":{"line":41,"column":46},"source":"index.js","original":{"line":13,"column":19}},{"generated":{"line":41,"column":50},"source":"index.js","original":{"line":13,"column":23}},{"generated":{"line":41,"column":52},"source":"index.js","original":{"line":13,"column":8}},{"generated":{"line":41,"column":53},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":43,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"name":"target","generated":{"line":44,"column":0},"source":"index.js","original":{"line":14,"column":2}},{"name":"target","generated":{"line":44,"column":12},"source":"index.js","original":{"line":14,"column":2}},{"generated":{"line":44,"column":18},"source":"index.js","original":{"line":14,"column":8}},{"name":"classList","generated":{"line":44,"column":19},"source":"index.js","original":{"line":14,"column":9}},{"generated":{"line":44,"column":28},"source":"index.js","original":{"line":14,"column":2}},{"name":"remove","generated":{"line":44,"column":29},"source":"index.js","original":{"line":14,"column":19}},{"generated":{"line":44,"column":35},"source":"index.js","original":{"line":14,"column":2}},{"generated":{"line":44,"column":36},"source":"index.js","original":{"line":14,"column":26}},{"generated":{"line":44,"column":45},"source":"index.js","original":{"line":14,"column":2}},{"generated":{"line":46,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":47,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":48,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":49,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":50,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":51,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":52,"column":0},"source":"index.js","original":{"line":10,"column":18}},{"generated":{"line":52,"column":3},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":54,"column":0},"source":"index.js","original":{"line":10,"column":15}},{"name":"fetchMore","generated":{"line":54,"column":18},"source":"index.js","original":{"line":10,"column":6}},{"generated":{"line":54,"column":27},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":55,"column":0},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":56,"column":0},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":57,"column":0},"source":"index.js","original":{"line":10,"column":15}},{"generated":{"line":57,"column":3},"source":"index.js","original":{"line":10,"column":0}},{"generated":{"line":57,"column":5},"source":"index.js","original":{"line":17,"column":0}},{"generated":{"line":60,"column":0},"source":"index.js","original":{"line":18,"column":0}},{"name":"options","generated":{"line":60,"column":4},"source":"index.js","original":{"line":18,"column":6}},{"generated":{"line":60,"column":11},"source":"index.js","original":{"line":18,"column":13}},{"generated":{"line":60,"column":14},"source":"index.js","original":{"line":18,"column":16}},{"generated":{"line":61,"column":0},"source":"index.js","original":{"line":19,"column":2}},{"name":"root","generated":{"line":62,"column":0},"source":"index.js","original":{"line":20,"column":2}},{"name":"root","generated":{"line":62,"column":2},"source":"index.js","original":{"line":20,"column":2}},{"generated":{"line":62,"column":6},"source":"index.js","original":{"line":20,"column":6}},{"generated":{"line":62,"column":8},"source":"index.js","original":{"line":20,"column":8}},{"generated":{"line":62,"column":12},"source":"index.js","original":{"line":18,"column":16}},{"generated":{"line":63,"column":0},"source":"index.js","original":{"line":21,"column":2}},{"name":"rootMargin","generated":{"line":64,"column":0},"source":"index.js","original":{"line":22,"column":2}},{"name":"rootMargin","generated":{"line":64,"column":2},"source":"index.js","original":{"line":22,"column":2}},{"generated":{"line":64,"column":12},"source":"index.js","original":{"line":22,"column":12}},{"generated":{"line":64,"column":14},"source":"index.js","original":{"line":22,"column":14}},{"generated":{"line":64,"column":20},"source":"index.js","original":{"line":18,"column":16}},{"generated":{"line":65,"column":0},"source":"index.js","original":{"line":23,"column":2}},{"name":"threshold","generated":{"line":66,"column":0},"source":"index.js","original":{"line":24,"column":2}},{"name":"threshold","generated":{"line":66,"column":2},"source":"index.js","original":{"line":24,"column":2}},{"generated":{"line":66,"column":11},"source":"index.js","original":{"line":24,"column":11}},{"generated":{"line":66,"column":13},"source":"index.js","original":{"line":24,"column":13}},{"generated":{"line":67,"column":0},"source":"index.js","original":{"line":18,"column":16}},{"generated":{"line":67,"column":1},"source":"index.js","original":{"line":18,"column":0}},{"generated":{"line":68,"column":0},"source":"index.js","original":{"line":27,"column":0}},{"name":"observer","generated":{"line":68,"column":4},"source":"index.js","original":{"line":27,"column":6}},{"generated":{"line":68,"column":12},"source":"index.js","original":{"line":27,"column":14}},{"generated":{"line":68,"column":15},"source":"index.js","original":{"line":27,"column":17}},{"name":"IntersectionObserver","generated":{"line":68,"column":19},"source":"index.js","original":{"line":27,"column":21}},{"generated":{"line":68,"column":39},"source":"index.js","original":{"line":27,"column":17}},{"generated":{"line":68,"column":40},"source":"index.js","original":{"line":27,"column":42}},{"name":"entries","generated":{"line":68,"column":50},"source":"index.js","original":{"line":27,"column":43}},{"generated":{"line":68,"column":57},"source":"index.js","original":{"line":27,"column":42}},{"generated":{"line":68,"column":59},"source":"index.js","original":{"line":27,"column":55}},{"generated":{"line":69,"column":0},"source":"index.js","original":{"line":28,"column":2}},{"generated":{"line":70,"column":0},"source":"index.js","original":{"line":29,"column":2}},{"name":"entries","generated":{"line":70,"column":32},"source":"index.js","original":{"line":29,"column":31}},{"generated":{"line":70,"column":39},"source":"index.js","original":{"line":29,"column":2}},{"generated":{"line":71,"column":0},"source":"index.js","original":{"line":29,"column":2}},{"name":"isIntersecting","generated":{"line":71,"column":6},"source":"index.js","original":{"line":29,"column":11}},{"generated":{"line":71,"column":20},"source":"index.js","original":{"line":29,"column":2}},{"name":"isIntersecting","generated":{"line":71,"column":35},"source":"index.js","original":{"line":29,"column":11}},{"generated":{"line":71,"column":49},"source":"index.js","original":{"line":29,"column":2}},{"generated":{"line":73,"column":0},"source":"index.js","original":{"line":31,"column":2}},{"name":"isIntersecting","generated":{"line":73,"column":6},"source":"index.js","original":{"line":31,"column":6}},{"generated":{"line":73,"column":20},"source":"index.js","original":{"line":31,"column":2}},{"generated":{"line":73,"column":22},"source":"index.js","original":{"line":31,"column":22}},{"name":"fetchMore","generated":{"line":74,"column":0},"source":"index.js","original":{"line":32,"column":4}},{"name":"fetchMore","generated":{"line":74,"column":4},"source":"index.js","original":{"line":32,"column":4}},{"generated":{"line":74,"column":13},"source":"index.js","original":{"line":32,"column":13}},{"generated":{"line":75,"column":0},"source":"index.js","original":{"line":33,"column":3}},{"generated":{"line":76,"column":0},"source":"index.js","original":{"line":34,"column":1}},{"generated":{"line":76,"column":1},"source":"index.js","original":{"line":27,"column":17}},{"name":"options","generated":{"line":76,"column":3},"source":"index.js","original":{"line":34,"column":3}},{"generated":{"line":76,"column":10},"source":"index.js","original":{"line":27,"column":17}},{"generated":{"line":76,"column":11},"source":"index.js","original":{"line":27,"column":0}},{"name":"observer","generated":{"line":77,"column":0},"source":"index.js","original":{"line":36,"column":0}},{"generated":{"line":77,"column":8},"source":"index.js","original":{"line":36,"column":8}},{"name":"observe","generated":{"line":77,"column":9},"source":"index.js","original":{"line":36,"column":9}},{"generated":{"line":77,"column":16},"source":"index.js","original":{"line":36,"column":0}},{"name":"fetchMoreTrigger","generated":{"line":77,"column":17},"source":"index.js","original":{"line":36,"column":17}},{"generated":{"line":77,"column":33},"source":"index.js","original":{"line":36,"column":0}}],"sources":{"index.js":"import \"./style.css\";\nimport \"regenerator-runtime\";\n\nimport renderList from \"./listRenderer\";\n\nconst app = document.querySelector(\"#app\");\nconst fetchMoreTrigger = document.querySelector(\"#fetchMore\");\nlet page = 0;\n\nconst fetchMore = async () => {\n  const target = page ? fetchMoreTrigger : app;\n  target.classList.add(\"loading\");\n  await renderList(page++);\n  target.classList.remove(\"loading\");\n};\n\n// Observe loadBtn\nconst options = {\n  // Use the whole screen as scroll area\n  root: null,\n  // Do not grow or shrink the root area\n  rootMargin: \"10px\",\n  // Threshold of 1.0 will fire callback when 100% of element is visible\n  threshold: 0.0,\n};\n\nconst observer = new IntersectionObserver((entries) => {\n  // Entries is a list of elements out of our targets that reported a change.\n  const [{ isIntersecting }] = entries;\n\n  if (isIntersecting) {\n    fetchMore();\n  }\n}, options);\n\nobserver.observe(fetchMoreTrigger);\n"},"lineCount":null}},"error":null,"hash":"9161b6d7800ada745ea80413623eda25","cacheData":{"env":{}}}